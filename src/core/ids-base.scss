/* Sass scss styles. Keep Base very small */
@import '../../node_modules/ids-identity/dist/theme-new/tokens/web/theme-new-mixins';
/* stylelint-disable scss/at-import-partial-extension */
@import '../../node_modules/ids-identity/dist/theme-new/tokens/web/theme-new.host.variables';
/* stylelint-enable scss/at-import-partial-extension */

/* Global SCSS Mixins (might need to become tokens) */
@import '../mixins/sass/ids-general-mixins';

/* Global variables (might want these to become tokens) */
$breakpoint-xxl: 1440px;
$breakpoint-xl: 1280px;
$breakpoint-lg: 1024px;
$breakpoint-md: 840px;
$breakpoint-sm: 600px;
$breakpoint-xs: 360px;

$transition-length: 200ms;
$transition-ease: cubic-bezier(0.4, 0, 0.6, 1);

// Field Sizes
$input-size-xs: 75px;
$input-size-sm: 150px;
$input-size-mm: 225px;
$input-size-md: 300px ;
$input-size-lg: 400px;
$input-size-full: 100%;

// Field Height
$input-field-height-xs: 28px;
$input-field-height-sm: 30px;
$input-field-height-md: 38px;
$input-field-height-lg: 48px;

// Sometimes we need to "fade" white into transparency, so we need a
// completely-transparent "white" color to use as one end of a gradient.
$transparent-white: rgba(255 255 255 / 0);

// Hidden Classes
.hide {
  display: none;
}

.hide-xxl-down {
  @media all and (max-width: $breakpoint-xxl) {
    display: none;
  }
}

@mixin hide-xxl-down {
  @media all and (max-width: $breakpoint-xxl) {
    display: none;
  }
}

.hide-xxl-up {
  @media all and (min-width: $breakpoint-xxl) {
    display: none;
  }
}

@mixin hide-xxl-up {
  @media all and (min-width: $breakpoint-xxl) {
    display: none;
  }
}

.hide-xl-down {
  @media all and (max-width: $breakpoint-xl) {
    display: none;
  }
}

@mixin hide-xl-down {
  @media all and (max-width: $breakpoint-xl) {
    display: none;
  }
}

.hide-xl-up {
  @media all and (min-width: $breakpoint-xl) {
    display: none;
  }
}

@mixin hide-xl-up {
  @media all and (min-width: $breakpoint-xl) {
    display: none;
  }
}

.hide-lg-down {
  @media all and (max-width: $breakpoint-lg) {
    display: none;
  }
}

@mixin hide-lg-down {
  @media all and (max-width: $breakpoint-lg) {
    display: none;
  }
}

.hide-lg-up {
  @media all and (min-width: $breakpoint-lg) {
    display: none;
  }
}

@mixin hide-lg-up {
  @media all and (min-width: $breakpoint-lg) {
    display: none;
  }
}

.hide-md-down {
  @media all and (max-width: $breakpoint-md) {
    display: none;
  }
}

@mixin hide-md-down {
  @media all and (max-width: $breakpoint-md) {
    display: none;
  }
}

.hide-md-up {
  @media all and (min-width: $breakpoint-md) {
    display: none;
  }
}

@mixin hide-md-up {
  @media all and (min-width: $breakpoint-md) {
    display: none;
  }
}

.hide-sm-down {
  @media all and (max-width: $breakpoint-sm) {
    display: none;
  }
}

@mixin hide-sm-down {
  @media all and (max-width: $breakpoint-sm) {
    display: none;
  }
}

.hide-sm-up {
  @media all and (min-width: $breakpoint-sm) {
    display: none;
  }
}

@mixin hide-sm-up {
  @media all and (min-width: $breakpoint-sm) {
    display: none;
  }
}

.hide-xs-down {
  @media all and (max-width: $breakpoint-xs) {
    display: none;
  }
}

@mixin hide-xs-down {
  @media all and (max-width: $breakpoint-xs) {
    display: none;
  }
}

.hide-xs-up {
  @media all and (min-width: $breakpoint-xs) {
    display: none;
  }
}

@mixin hide-xs-up {
  @media all and (min-width: $breakpoint-xs) {
    display: none;
  }
}

@mixin breakpoint-xs-down {
  @media all and (max-width: $breakpoint-xs) {
    @content;
  }
}
