@import '../../themes/mixins/ids-core-mixins';
@import './ids-layout-grid-base';
@import './ids-layout-grid-media-queries';
@import './ids-layout-grid-container-queries';

// ================================================
// Main

/* Use media queries by default */
:host(.#{$prefix}:not([enable-container])),
.#{$prefix}:not([enable-container]) {
  @include media-queries;
}

/* Use container queries if enabled */
:host(.#{$prefix}[enable-container]),
.#{$prefix}[enable-container] {
  container-type: inline-size;

  @include container-queries;
}

/* Grid Gaps */
:host([gap='none']),
.#{$prefix}.#{$prefix}-gap-none {
  grid-gap: 0;
}

:host([gap='sm']),
.#{$prefix}.#{$prefix}-gap-sm {
  grid-gap: $grid-gap-sm;
}

:host([gap='md']),
.#{$prefix}.#{$prefix}-gap-md {
  grid-gap: $grid-gap-md;
}

:host([gap='lg']),
.#{$prefix}.#{$prefix}-gap-lg {
  grid-gap: $grid-gap-lg;
}

:host([gap='xl']),
.#{$prefix}.#{$prefix}-gap-xl {
  grid-gap: $grid-gap-xl;
}

// ================================================
// Box Model

/* Grid Margins */
:host([margin='xs']),
.#{$prefix}.#{$prefix}-margin-xs {
  margin: $grid-margin-xs;
}

:host([margin='sm']),
.#{$prefix}.#{$prefix}-margin-sm {
  margin: $grid-margin-sm;
}

:host([margin='md']),
.#{$prefix}.#{$prefix}-margin-md {
  margin: $grid-margin-md;
}

:host([margin='lg']),
.#{$prefix}.#{$prefix}-margin-lg {
  margin: $grid-margin-lg;
}

:host([margin='xl']),
.#{$prefix}.#{$prefix}-margin-xl {
  margin: $grid-margin-xl;
}

:host([margin='auto']),
.#{$prefix}.#{$prefix}-margin-auto {
  margin: auto;
}

/* Grid Margin Y */
:host([margin-y='xs']),
.#{$prefix}.#{$prefix}-margin-y-xs {
  margin-block: $grid-margin-xs;
}

:host([margin-y='sm']),
.#{$prefix}.#{$prefix}-margin-y-sm {
  margin-block: $grid-margin-sm;
}

:host([margin-y='md']),
.#{$prefix}.#{$prefix}-margin-y-md {
  margin-block: $grid-margin-md;
}

:host([margin-y='lg']),
.#{$prefix}.#{$prefix}-margin-y-lg {
  margin-block: $grid-margin-lg;
}

:host([margin-y='xl']),
.#{$prefix}.#{$prefix}-margin-y-xl {
  margin-block: $grid-margin-xl;
}

/* Grid Max Width */
:host([max-width='xs']),
.#{$prefix}.#{$prefix}-max-width-xs {
  max-width: $breakpoint-xs;
}

:host([max-width='sm']),
.#{$prefix}.#{$prefix}-max-width-sm {
  max-width: $breakpoint-sm;
}

:host([max-width='md']),
.#{$prefix}.#{$prefix}-max-width-md {
  max-width: $breakpoint-md;
}

:host([max-width='lg']),
.#{$prefix}.#{$prefix}-max-width-lg {
  max-width: $breakpoint-lg;
}

:host([max-width='xl']),
.#{$prefix}.#{$prefix}-max-width-xl {
  max-width: $breakpoint-xl;
}

:host([max-width='xxl']),
.#{$prefix}.#{$prefix}-max-width-xxl {
  max-width: $breakpoint-xxl;
}

:host([max-width$='px']) {
  max-width: var(--max-width);
}

/* Grid Padding */
:host([padding='xs']),
::slotted([padding='xs']),
.#{$prefix}.#{$prefix}-padding-xs {
  padding: $grid-padding-xs;
}

:host([padding='sm']),
::slotted([padding='sm']),
.#{$prefix}.#{$prefix}-padding-sm {
  padding: $grid-padding-sm;
}

:host([padding='md']),
::slotted([padding='md']),
.#{$prefix}.#{$prefix}-padding-md {
  padding: $grid-padding-md;
}

:host([padding='lg']),
::slotted([padding='lg']),
.#{$prefix}.#{$prefix}-padding-lg {
  padding: $grid-padding-lg;
}

:host([padding='xl']),
::slotted([padding='xl']),
.#{$prefix}.#{$prefix}-padding-xl {
  padding: $grid-padding-xl;
}

/* Grid Padding X */
:host([padding-x='xs']),
.#{$prefix}.#{$prefix}-padding-x-xs {
  padding-inline: $grid-padding-xs;
}

:host([padding-x='sm']),
.#{$prefix}.#{$prefix}-padding-x-sm {
  padding-inline: $grid-padding-sm;
}

:host([padding-x='md']),
.#{$prefix}.#{$prefix}-padding-x-md {
  padding-inline: $grid-padding-md;
}

:host([padding-x='lg']),
.#{$prefix}.#{$prefix}-padding-x-lg {
  padding-inline: $grid-padding-lg;
}

:host([padding-x='xl']),
.#{$prefix}.#{$prefix}-padding-x-xl {
  padding-inline: $grid-padding-xl;
}

/* Grid Padding Y */
:host([padding-y='xs']),
.#{$prefix}.#{$prefix}-padding-y-xs {
  padding-block: $grid-padding-xs;
}

:host([padding-y='xxs']),
.#{$prefix}.#{$prefix}-padding-y-xxs {
  padding-block: $grid-padding-xxs;
}

:host([padding-y='sm']),
.#{$prefix}.#{$prefix}-padding-y-sm {
  padding-block: $grid-padding-sm;
}

:host([padding-y='md']),
.#{$prefix}.#{$prefix}-padding-y-md {
  padding-block: $grid-padding-md;
}

:host([padding-y='lg']),
.#{$prefix}.#{$prefix}-padding-y-lg {
  padding-block: $grid-padding-lg;
}

:host([padding-y='xl']),
.#{$prefix}.#{$prefix}-padding-y-xl {
  padding-block: $grid-padding-xl;
}

// ================================================
// Grid Layout

/* Grid - Auto Fit/Fill */
:host([auto-fit]),
.#{$prefix}-auto-fit {
  width: 100%;
  grid-template-columns: repeat(auto-fit, minmax($min-col-width, $max-col-width));
}

:host([auto-fill]),
.#{$prefix}-auto-fill {
  width: 100%;
  grid-template-columns: repeat(auto-fill, minmax($min-col-width, $max-col-width));
}

/* Grid - Auto Columns - TODO - Add settings for grid-auto-columns */
:host(.#{$prefix}-cols-auto),
.#{$prefix}-cols-auto {
  grid-auto-columns: auto;
}

:host(.#{$prefix}-cols-min),
.#{$prefix}-cols-min	{
  grid-auto-columns: min-content;
}

:host(.#{$prefix}-cols-max),
.#{$prefix}-cols-max {
  grid-auto-columns: max-content;
}

:host(.#{$prefix}-cols-fr),
.#{$prefix}-cols-fr {
  grid-auto-columns: minmax(0, 1fr);
}

/* Grid Flow */
:host([flow='row']),
.#{$prefix}-flow-row {
  grid-auto-flow: row;
}

:host([flow='column']),
.#{$prefix}-flow-col {
  grid-auto-flow: column;
}

:host([flow='dense']),
.#{$prefix}-flow-dense {
  grid-auto-flow: dense;
}

:host([flow='row-dense']),
.#{$prefix}-flow-row-dense {
  grid-auto-flow: row dense;
}

:host([flow='column-dense']),
.#{$prefix}-flow-col-dense {
  grid-auto-flow: column dense;
}

/* Grid - Auto Rows - TODO - Add settings for grid-auto-rows */
:host(.#{$prefix}-auto-rows-auto),
.#{$prefix}-auto-rows-auto {
  grid-auto-rows: auto;
}

:host(.#{$prefix}-auto-rows-min),
.#{$prefix}-auto-rows-min {
  grid-auto-rows: min-content;
}

:host(.#{$prefix}-auto-rows-max),
.#{$prefix}-auto-rows-max {
  grid-auto-rows: max-content;
}

:host(.#{$prefix}-auto-rows-fr),
.#{$prefix}-auto-rows-fr {
  grid-auto-rows: minmax(0, 1fr);
}

:host([row-height]),
.#{$prefix}-auto-row-height {
  grid-auto-rows: var(--grid-auto-row-height);
}

/* Grid - Template Rows */
:host([template-rows]),
.#{$prefix}-template-rows {
  grid-template-rows: var(--grid-template-rows);
}

/** Align items */
$align-items-list: start end center stretch;

@each $align-items in $align-items-list {
  :host([align-items='#{$align-items}']),
  .#{$prefix}-align-items-#{$align-items} {
    align-items: $align-items;
  }
}

/* Justify Content and Align Content */
$align-content-list: start center space-between space-around space-evenly end;

@each $align-content in $align-content-list {
  :host([justify-content='#{$align-content}']),
  .#{$prefix}-justify-#{$align-content} {
    justify-content: $align-content;
  }

  :host([align-content='#{$align-content}']),
  .#{$prefix}-align-#{$align-content} {
    align-content: $align-content;
  }

  ::slotted([justify-content='#{$align-content}']),
  .#{$prefix} > .#{$prefix}-justify-#{$align-content} {
    display: grid;
    justify-content: $align-content;
  }

  ::slotted([align-content='#{$align-content}']),
  .#{$prefix} > .#{$prefix}-align-#{$align-content} {
    display: grid;
    align-content: $align-content;
  }
}

/* Grid Col/Row Span All and Sticky */
::slotted([col-span='all']),
.#{$prefix} > .#{$prefix}-col-span-all {
  grid-column: 1 / -1;
}

::slotted([row-span='all']),
.#{$prefix} > .#{$prefix}-row-span-all {
  grid-row: 1 / -1;
}

::slotted([sticky]),
.#{$prefix} > .#{$prefix}-sticky {
  position: sticky;
  top: var(--sticky-position);
}

// ================================================
// Hide Cells

/* Hide Cell on Breakpoints */
:host(.#{$prefix}) > ::slotted([hide='xs']) {
  display: none;
}

:host(.#{$prefix}) > ::slotted([hide='sm']) {
  display: none;
}

:host(.#{$prefix}) > ::slotted([hide='md']) {
  display: none;
}

:host(.#{$prefix}) > ::slotted([hide='lg']) {
  display: none;
}

:host(.#{$prefix}) > ::slotted([hide='xl']) {
  display: none;
}

:host(.#{$prefix}) > ::slotted([hide='xxl']) {
  display: none;
}

// ================================================
// Demo Utilities

/* Editable */
::slotted([editable]) > ids-button,
.#{$prefix} > .#{$prefix}-cell.editable > ids-button {
  position: absolute;
  top: 0;
  right: 0;
}

/* Fill */
::slotted([fill]),
.#{$prefix} > .#{$prefix}-cell.fill {
  background-color: var(--grid-fill-color);
  color: var(--grid-text-color);
}

/* Height */
::slotted([height='auto']),
.#{$prefix} > .#{$prefix}-height-auto {
  height: auto;
}
