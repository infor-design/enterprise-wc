@import '../ids-input/ids-input';

.ids-color-picker {
  margin-bottom: var(--ids-space-sm);
  display: block;
  position: relative;
  max-width: var(--ids-input-width-20);

  .color-preview {
    margin-inline-start: 0;
  }

  input {
    text-overflow: ellipsis;
  }

  ids-trigger-field::part(dirty-tracker-icon) {
    margin-inline-start: 35px;
  }

  ids-trigger-field[compact]::part(dirty-tracker-icon) {
    left: -1px;
    top: 0;
    margin-inline-start: 27px;
  }

  &.full {
    max-width: var(--ids-input-width-full);
  }
}

ids-input::part(container) {
  margin-bottom: 0;
}

.color-picker-trigger-btn {
  margin-inline-end: 0;

  &::part(button) {
    margin-inline-start: 1px;
    margin-inline-end: 1px;
    position: relative;
    z-index: 2;
  }
}

.ids-color-picker:focus-within ids-input::part(input) {
  box-shadow: none;
}

.color-popup {
  display: grid;
  grid-template-columns: repeat(10, 20px);
  overflow: visible;
  padding: var(--ids-space-xs);
  align-items: center;
  align-content: center;
  justify-content: center;
  justify-items: center;
  column-gap: var(--ids-space-xs);
  row-gap: var(--ids-space-2xs);
  width: auto;
  min-width: 265px;
}

.advanced-color-picker {
  position: absolute;
  bottom: var(--ids-space-sm);

  // The visibility: hidden style behaves like a combination of opacity: 0 and pointer-events: none.
  // Regarding the accessibility, opacity: 0 is the only property which makes the
  // element accessible in the tab order, and the element's content can be read by screen readers.
  visibility: hidden;
  opacity: 0;
}
