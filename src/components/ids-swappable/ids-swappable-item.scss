:host {
  font-family: var(--ids-swappable-item-font-family);
  border: var(--ids-swappable-item-border-default);
  cursor: var(--ids-swappable-item-cursor-default);
  padding-inline: var(--ids-swappable-item-padding-inline);
  padding-block: var(--ids-swappable-item-padding-block);
  height: var(--ids-swappable-item-height);
  display: flex;
  flex-direction: row;
  transition: height 0.4s ease, padding 0.4s ease;
  overflow: hidden;
}

:host([hidden]) {
  display: none;
}

ids-icon {
  visibility: hidden;
}

:host(:hover) {
  ids-icon {
    visibility: visible;
  }
}

:host([dir='rtl']:hover) {
  &::before {
    left: unset;
    right: 5px;
    transform: translate(-1px, -47%);
  }
}

:host(:focus:not(.hide-focus)) {
  border: var(--ids-swappable-item-border-focus);
  box-shadow: var(--ids-swappable-item-shadow-focus);
  outline: var(--ids-swappable-item-outline-focus);
}

:host([selected]) {
  cursor: var(--ids-swappable-item-cursor-selected);
}

:host([dragging]) {
  opacity: var(--ids-swappable-item-opacity-dragging);
}

:host([dragging]:not(.slotted-ids-tab)),
:host([selected]:not(.slotted-ids-tab)) {
  background-color: var(--ids-swappable-item-color-background-selected);
  border: 1px solid var(--ids-swappable-item-color-border-selected);
  color: var(--ids-swappable-item-color-text-selected);
}

:host([over]) {
  border: var(--ids-swappable-item-over-border);
}

:host(.is-hidden) {
  height: var(--ids-space-none);
  padding: var(--ids-space-none);
  border: none;
  overflow: hidden;
}

// Fixes slotted IdsTabs to appear flush with their containers
// (IdsSwappableItem causes a 1px boundary as a result of its required transparent border)
// @TODO: Relocate this to another component / review wrapping, separation of concerns
::slotted(ids-tab) {
  position: relative;
  margin: -1px;
}

:host(.slotted-ids-tab:not(.orientation-vertical)) {
  margin-inline-start: var(--ids-space-2xs);
}
