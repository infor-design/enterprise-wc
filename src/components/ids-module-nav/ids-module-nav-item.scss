@import '../../themes/mixins/ids-core-mixins';
@import '../ids-accordion/ids-accordion-header';

:host {
  @include border-box();
}

// ================================================
// Styles specific to Module Nav Accordions

@mixin accordion-header-module-nav-colors() {
  border-color: var(--ids-color-transparent);
  border-radius: var(--ids-module-nav-common-border-radius);
  border-style: solid;
  border-width: var(--ids-border-width-sm);
  color: var(--ids-module-nav-item-text-color);

  &:hover {
    background-color: var(--ids-module-nav-item-hover-bg-color);
    color: var(--ids-module-nav-item-hover-text-color);
  }

  &:active {
    background-color: var(--ids-module-nav-item-selected-bg-color);
    color: var(--ids-module-nav-item-selected-text-color);
    border-color: var(--ids-module-nav-item-active-border-color);
  }

  &:focus:not(.hide-focus) {
    border-color: var(--ids-module-nav-item-active-border-color);
  }

  &.selected {
    background-color: var(--ids-module-nav-item-selected-bg-color);
    color: var(--ids-module-nav-item-selected-text-color);
  }

  &[disabled] {
    // @TODO disabled colors
    color: var(--ids-module-nav-item-text-color);
  }

  .filter {
    // @TODO filter colors? (need designs)
    color: var(--ids-module-nav-item-text-color);
  }

  &.hidden-by-filter.child-filter-match {
    // @TODO filter colors? (need designs)
    color: var(--ids-module-nav-item-text-color);
  }

  // ================================================
  // Display Mode: Hidden

  &:not([class*='display-mode-']) {
    height: var(--ids-module-nav-item-collapsed-size);
    margin-block: var(--ids-module-nav-item-collapsed-general-space-size);
    margin-inline: auto;
    padding-block: var(--ids-module-nav-item-padding-block);
    padding-inline: auto;
    width: 0;

    .ids-accordion-display-icon {
      justify-self: center;
      align-self: center;
      margin-inline: 0;
      padding: 0;
    }

    .ids-accordion-expander-icon {
      display: none;
    }
  }

  // ================================================
  // Display Mode: Collapsed

  &.display-mode-collapsed {
    height: var(--ids-module-nav-item-collapsed-size);
    width: var(--ids-module-nav-item-collapsed-size);
    margin: var(--ids-module-nav-item-collapsed-general-space-size) auto;

    .ids-accordion-display-icon {
      margin-inline: var(--ids-module-nav-item-display-icon-collapsed-margin);
      padding: 0;
      justify-self: center;
      align-self: center;
    }

    .ids-accordion-expander-icon {
      display: none;
    }

    &::slotted(ids-text) {
      @include audible;
    }
  }

  // ================================================
  // Display Mode: Expanded

  &.display-mode-expanded {
    margin-block: var(--ids-module-nav-item-margin-block);
    margin-inline: var(--ids-module-nav-item-margin-inline);
    padding: var(--ids-module-nav-item-padding-block);

    &:not(.depth-1) {
      &.first-child {
        margin-block-start: 0;
      }

      &.last-child {
        margin-block-end: 0;
      }
    }

    .ids-accordion-display-icon {
      margin-inline-end: var(--ids-module-nav-item-expanded-icon-text-space-size);
    }

    .ids-accordion-expander-icon {
      &:last-child {
        margin-inline-end: 4px;
      }
    }
  }
}

@mixin single-line-ellipsis-text() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// ================================================
// Module Nav Item Component

.ids-module-nav-item {
  @include border-box();

  transition: height var(--ids-motion-duration) var(--ids-motion-ease),
    margin var(--ids-motion-duration) var(--ids-motion-ease),
    padding var(--ids-motion-duration) var(--ids-motion-ease),
    width var(--ids-motion-duration) var(--ids-motion-ease);

  &.color-variant-module-nav {
    @include accordion-header-module-nav-colors();
  }

  &.color-variant-sub-module-nav {
    @include accordion-header-module-nav-colors();
  }

  ::slotted(ids-text) {
    @include single-line-ellipsis-text();
  }

  .ids-text {
    @include single-line-ellipsis-text();
  }

  .ids-accordion-expander-icon {
    width: var(--ids-module-nav-item-dropdown-icon-size);
  }

  .ids-accordion-display-icon,
  .ids-accordion-expander-icon {
    transition: padding var(--ids-motion-duration) var(--ids-motion-ease);
  }

  // ================================================
  // Nested Alignment Rules ("expanded" display mode only)

  $depth-offset: 16;
  $top-level-icon-offset: 8;
  $sub-level-icon-offset: 12;

  &.display-mode-expanded {
    // Generates nested alignment styles
    // NOTE: `depth-1` can't detect icons on a parent because there is no parent
    @for $i from 1 through 6 {
      &.depth-#{$i} {
        @if $i == 1 {
          padding-inline-start: var(--ids-module-nav-item-padding-block);

          &.is-expandable {
            padding-inline-start: var(--ids-module-nav-item-padding-block);
          }
        } @else {
          $this-depth-offset: ($depth-offset * ($i - 1));
          $expandable-end-offset: (16 + $this-depth-offset);
          $expandable-start-offset: (8 + $this-depth-offset);
          $not-expandable-offset: (24 + $this-depth-offset);

          // Applies to Module Nav accordions without icons present
          // in their top-level headers/items
          padding-inline-start: #{$sub-level-icon-offset * ($i - 1)}px;

          &:not(.is-expandable) {
            padding-inline-start: #{$sub-level-icon-offset + $not-expandable-offset}px;
          }

          &.is-expandable {
            padding-inline-start: #{$expandable-start-offset}px;
          }

          &.siblings-can-expand {
            &:not(.is-expandable) {
              padding-inline-start: #{$not-expandable-offset + 6}px;
            }
          }

          // Applies to Module Nav accordions that have icons present
          // in their top-level headers/items
          &.parent-has-icon {
            padding-inline-start: #{$top-level-icon-offset + $sub-level-icon-offset * ($i - 1)}px;

            &:not(.is-expandable) {
              $sublevel-offset: 0;

              @if $i == 2 {
                $sublevel-offset: 6;
              }

              padding-inline-start: #{$top-level-icon-offset + $not-expandable-offset - $sublevel-offset}px;
            }

            &.is-expandable {
              padding-inline-start: #{$top-level-icon-offset + $expandable-start-offset}px;
            }

            &.siblings-can-expand {
              &:not(.is-expandable) {
                padding-inline-start: #{$top-level-icon-offset + $not-expandable-offset + $sub-level-icon-offset - 6}px;
              }
            }
          }
        }
      }
    }
  }
}
