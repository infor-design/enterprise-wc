/* Ids Menu Item Component */
@import './ids-menu-base';
@import '../../mixins/sass/ids-check-mixin';
@import '../../mixins/sass/ids-checkbox-mixin';

/**
 * NOTE ABOUT MENU ITEM ELEMENT ORDER:
 * Definitions for grid template size in IdsMenuItem are defined based on the below order.
 * If changes are made to IdsMenuItem's rendering, this order must remain in place.
 *
 * [checkmark?] - [icon?] - text - [shortcut text?] - [submenu icon?]
 **/

:host {
  @include block();

  position: static;

  // @TODO: remove slotted rules if we decide to
  // support Submenus inside standalone ids-menu
  ::slotted(ids-menu) {
    display: none;
  }
}

// Fixes usability issues with some slotted IDS components inside menu items
::slotted(ids-text) {
  pointer-events: none;
}

::slotted(ids-icon) {
  pointer-events: none;
}

// Resets position rules for nested menus
::slotted(ids-popup-menu) {
  position: static;
}

:host([hidden]) {
  display: none;
}

.ids-menu-item {
  @include font-sans();

  align-items: center;
  cursor: pointer;
  list-style: none;
  min-width: 110px; // needed to provide base sizing for menus
  position: static;
  transition: background-color $menu-item-transition-length cubic-bezier(0.4, 0, 0.6, 1);
  user-select: none;

  ids-icon,
  .ids-icon,
  .ids-menu-item-display-icon {
    @include block();

    align-self: center;
    justify-content: center;
    place-self: center;
  }

  // ================================================
  // Standard Rules for a menu item with no icons
  a {
    @include pl-12();
    @include pr-8();
    @include py-8();
    @include text-16();

    display: grid;
    grid-template-columns: 0 max-content;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellispis;
    user-select: inherit;
    white-space: nowrap;
    width: calc(100% - 20px);

    // Disable default browser focus state.
    // (comment this out to debug the true menu focus state)
    &:focus {
      @include outline-none();
    }

    > * {
      vertical-align: middle;
    }

    // Wraps slotted icons inside menu items and needs its own centering rules
    .ids-menu-item-icon {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    ids-icon,
    .ids-icon,
    .ids-menu-item-display-icon {
      grid-column-start: 1;
    }

    .ids-menu-item-text {
      grid-column-start: 2;

      span,
      .ids-text {
        display: inline-block;
      }

      ::slotted(ids-text) {
        display: inline-block;
      }
    }

    .ids-menu-item-submenu-icon {
      @include ml-12();

      grid-column-start: 3;
      transform: rotateZ(-90deg);
    }
  }

  &:not(.text-center),
  &:not(.text-start),
  &:not(.text-end) {
    .ids-menu-item-text {
      text-align: start;
    }
  }

  &.text-center,
  &.text-start,
  &.text-end {
    a {
      display: flex;
      align-items: center;

      .ids-menu-item-text {
        margin-inline-start: var(--ids-number-spacing-base);
      }
    }
  }

  &.text-center {
    a {
      text-align: center;
      justify-content: center;
    }
  }

  &.text-start {
    a {
      text-align: start;
      justify-content: start;
    }
  }

  &.text-end {
    a {
      text-align: end;
      justify-content: end;
    }
  }

  // ================================================
  // Disabled state

  &.disabled {
    @include text-slate-30;

    // Disable all mouse interactions
    cursor: default;
    pointer-events: none;
    user-select: none;

    a {
      color: inherit;
    }

    ids-icon,
    .ids-icon {
      fill: var(--ids-color-palette-slate-30);
    }
  }

  // ================================================
  // Hidden state

  &.hidden {
    display: none;
  }

  // ================================================
  // Highlighted state

  &.highlighted {
    background-color: var(--ids-color-palette-slate-20);
  }

  // ================================================
  // Rules for a menu item with shortcut keys

  &.has-shortcuts {
    a {
      grid-template-columns: 0 50% 50%;
    }

    &:not(.has-submenu) {
      .ids-menu-item-shortcuts {
        margin-inline-start: 16px;
        margin-inline-end: 4px; // line up with submenu icons
      }
    }
  }

  // ================================================
  // Rules for a menu item with an icon

  &.has-icon {
    a {
      @include px-8();

      grid-template-columns: 30px max-content;
    }
  }

  &.has-shortcuts.has-icon {
    a {
      grid-template-columns: 30px calc(50% - 15px) calc(50% - 15px);
    }
  }

  // ================================================
  // Rules for a menu item with a checkmark

  &.has-checkmark,
  &.has-multi-checkmark {
    a {
      @include pl-4();

      grid-template-columns: 30px 0 max-content 0;

      // When checkmarks are present, all column placements change
      .check {
        grid-column-start: 1;
      }

      ids-icon,
      .ids-icon,
      .ids-menu-item-display-icon {
        grid-column-start: 2;
      }

      .ids-menu-item-text {
        grid-column-start: 3;
      }

      .ids-menu-item-submenu-icon {
        grid-column-start: 4;
      }
    }
  }

  &.has-shortcuts.has-checkmark,
  &.has-shortcuts.has-multi-checkmark {
    a {
      grid-template-columns: 30px 0 50% calc(50% - 30px);
    }
  }

  // ================================================
  // Rules for a menu item with a submenu + submenu icon

  &.has-submenu {
    a {
      grid-template-columns: 0 calc(100% - 25px) 25px;
    }

    // NOTE: Submenu items contain this element,
    // but hide it from the grid template calculation
    .ids-menu-item-shortcuts {
      display: none;
    }
  }

  // ================================================
  // Rules for a menu item with a checkmark

  &.has-icon.has-checkmark,
  &.has-icon.has-multi-checkmark {
    a {
      @include pl-4();

      grid-template-columns: 30px 30px calc(100% - 60px);
      width: calc(100% - 12px);
    }
  }

  &.has-shortcuts.has-icon.has-checkmark,
  &.has-shortcuts.has-icon.has-mutlt-checkmark {
    a {
      grid-template-columns: 30px 30px calc(50% - 30px) calc(50% - 30px);
    }
  }

  // ================================================
  // Rules for a menu item with an action-defined icon, and a submenu + submenu icon
  // Also for a menu item with a checkmark, and a submenu + submenu icon

  &.has-icon.has-submenu {
    a {
      grid-template-columns: 30px calc(100% - 55px) 25px;
    }
  }

  // Icon slot is still present (but hidden) in this configuration
  &.has-checkmark.has-submenu,
  &.has-multi-checkmark.has-submenu {
    a {
      grid-template-columns: 30px 0 calc(100% - 55px) 25px;
    }
  }

  // ================================================
  // Rules for a menu item with a checkmark, action-defined icon, and a submenu + submenu icon

  &.has-icon.has-checkmark.has-submenu,
  &.has-icon.has-multi-checkmark.has-submenu {
    a {
      grid-template-columns: 30px 30px calc(100% - 85px) 25px;
    }
  }
}

.ids-menu-item-shortcuts {
  pointer-events: none;
  text-align: end;
}

// ===============================================
// Checkmark Styles

.has-checkmark {
  span.check {
    @include check-base();
  }

  &.selected {
    span.check::after {
      @include check-icon();

      left: 11px;
      margin-top: 2px;
    }

    &.disabled {
      span.check::after {
        @include check-icon-disabled();
      }
    }
  }
}

.has-multi-checkmark {
  span.check {
    @include checkbox-unchecked();

    align-self: center;
    justify-self: center;
    position: relative;
    top: 0;
  }

  &.selected {
    span.check {
      @include checkbox-checked(light);

      &::after { //stylelint-disable
        @include checkbox-checked-after();
      }
    }
  }

  &.disabled {
    &.selected {
      span.check {
        @include checkbox-disabled-checked(light);
      }
    }
  }
}

// Handle Themes
.ids-menu-item[mode='dark'] {
  @include text-white();

  &.disabled {
    @include text-slate-50();
  }

  &.highlighted {
    background-color: var(--ids-color-palette-slate-80);
  }

  &.has-multi-checkmark {
    span.check {
      @include border-slate-40();
    }

    &.selected {
      span.check {
       @include border-azure-60();
      }
    }
  }
}

.ids-menu-item[mode='contrast'] {
  @include text-slate-100();

  &.disabled {
    @include text-slate-50();
  }

  &.highlighted {
    background-color: var(--ids-color-palette-slate-20);
  }

  &.has-multi-checkmark {
    span.check {
      @include bg-white();
      @include border-slate-90();
    }

    &.selected {
      span.check {
        @include bg-azure-80();
        @include border-azure-80();
      }
    }
  }
}

// RTL Fixes
.ids-menu-item[dir='rtl'] {
  a .ids-menu-item-submenu-icon {
    grid-column-start: 3;
    margin-left: 0;
    margin-right: 18px;
    transform: rotateZ(90deg);
  }

  &.has-submenu a {
    padding-right: 8px;
  }
}
