/**
 * Ids Button Component CSS
 * (Includes standard and icon button rules)
 */
@use '../../themes/mixins/ids-core-mixins' as mixins;
@import './ids-button-base';

:host {
  display: inline-flex;
  vertical-align: middle;

  ::slotted(span) {
    vertical-align: bottom;
  }

  ::slotted(span),
  ::slotted(ids-text) {
    color: currentColor;
    align-self: center;
  }

  ::slotted(ids-icon) {
    vertical-align: middle;
    color: currentColor;
  }

  ::slotted(span.audible) {
    @include mixins.audible();
  }

  // Button elements should fill the space inside shadow root
  button,
  .ids-icon-button {
    justify-content: center;
    height: 100%;
    width: 100%;
  }
}

:host(.hidden) {
  display: none;
}

:host([system-button]) {
  button:hover {
    background-color: transparent;
    border-color: transparent;
    color: var(--ids-button-system-color-text-hover);
  }
}

:host([hidden]) {
  display: none;
}

// Reset button display styles internally
button {
  display: block;
}

// Applies to all non-icon button types
.ids-button,
.ids-toggle-button,
.ids-menu-button:not(.ids-icon-button),
.ids-modal-button {
  @include mixins.antialiased();

  .ids-icon {
    display: inline-flex;
    place-self: center;
    vertical-align: middle;
  }
}

.ids-button,
.ids-toggle-button,
.ids-menu-button {
  @include ids-base-button-styles();
  @include ids-standard-button-colors();

  // Assign padding based on type/usage
  // ====================================================
  &:not(.no-padding) {
    @include ids-standard-button-padding();
  }

  &.btn-tertiary,
  &.btn-tertiary-destructive {
    @include ids-inline-button-padding();
  }

  &.no-padding {
    @include ids-inline-button-padding();
  }
}

.ids-menu-button.is-active,
.ids-menu-button.is-active:hover {
  background-color: var(--ids-button-menu-background-color-active);
  color: var(--ids-button-menu-color-text-active);
}

.ids-menu-button.formatter-width {
  &:not(.no-padding):not(.ids-icon-button) {
    padding-inline-start: calc(var(--ids-space-xs) - 1px);
    padding-inline-end:calc(var(--ids-space-xs) - 1px);
  }

  &:not(.formatter-width-percentage) {
    justify-content: normal;

    .ids-icon {
      position: absolute;
      inset-inline-end: var(--ids-space-xxs);
    }
  }
}

.ids-icon-button {
  @include ids-base-button-styles();
  @include ids-standard-button-colors();

  // Everything below is only for icon buttons
  padding-inline-start: var(--ids-button-icon-padding);
  padding-inline-end: var(--ids-button-icon-padding);
  padding-block-start: var(--ids-button-icon-padding);
  padding-block-end: var(--ids-button-icon-padding);

  &:not(.no-padding) {
    padding-inline-start: var(--ids-button-icon-padding);
    padding-inline-end:var(--ids-button-icon-padding);
    padding-top: var(--ids-button-icon-padding);
    padding-bottom: var(--ids-button-icon-padding);

    &:not(.ids-trigger-button) {
      height: var(--ids-button-icon-height);
      width: var(--ids-button-icon-width);
    }
  }

  &:not(.square) {
    border-radius: var(--ids-button-radius);
  }

  &.square {
    border-radius: 0;
  }

  .ids-icon {
    display: block;
    padding-inline-start: 2px;
    font-size: 0;
    padding-block-start: 2px;
  }

  span.audible {
    @include mixins.audible();
  }

  &.no-margins {
    margin-inline-start: var(--ids-space-none);
    margin-inline-end: var(--ids-space-none);
  }
}

// Mix-in special rules for contextual buttons
.ids-button,
.ids-icon-button,
.ids-menu-button {
  @include ids-standard-button-shadows();
}

// Specific Modifications for Modal Buttons
// Do not apply styles to modal close icon button, appearance as icon is required
.ids-modal-button:not(.ids-modal-icon-button) {
  @include ids-base-button-styles();
  @include ids-modal-button-color-defaults();

  padding-block-start: var(--ids-space-12);
  padding-block-end: var(--ids-space-12);
  display: block;
  font-weight: var(--ids-font-weight-semibold);
  justify-content: center;
  height: 100%;
  width: 100%;

  &:focus {
    z-index: 1;
  }
}

// Adjusting hitbox for the modal close icon
.ids-modal-icon-button {
  padding: var(--ids-space-xs);
}

// ====================================================
// Swipe Action Buttons (Swipe action component)
.btn-swipe-action-left,
.btn-swipe-action-right {
  display: block;
  padding: 0 var(--ids-space-xs) var(--ids-space-xs);
  height: 100%;
  margin: 0;
  white-space: inherit;
  width: 85px;

  ::slotted(ids-icon) {
    display: block;
  }

  &:hover,
  &:focus {
    box-shadow: none;
    border-color: transparent;
  }
}

// override button margin for swipe action buttons
.ids-button:not(.no-margins).btn-swipe-action-left,
.ids-button:not(.no-margins).btn-swipe-action-right {
  margin: 0;
}

.btn-swipe-action-left {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  background-color: var(--ids-swipe-action-color-background-left);
  color: var(--ids-swipe-action-color-text-left);

  &:active {
    background-color: var(--ids-swipe-action-color-background-left-active);
    color: var(--ids-swipe-action-color-text-left-active)
  }

  &:hover {
    background-color: var(--ids-swipe-action-color-background-left-hover);
    color: var(--ids-swipe-action-color-text-left-hover)
  }
}

.btn-swipe-action-right {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  background-color: var(--ids-swipe-action-color-background-right);
  color: var(--ids-swipe-action-color-text-right);

  &:active {
    background-color: var(--ids-swipe-action-color-background-right-active);
    color: var(--ids-swipe-action-color-text-right-active)
  }

  &:hover {
    background-color: var(--ids-swipe-action-color-background-right-hover);
    color: var(--ids-swipe-action-color-text-right-hover)
  }
}

.ids-icon-button.gen-ai-active,
.ids-button.gen-ai-active {
  &:not(.no-animation) {
    ::slotted(ids-icon[icon="insights-smart-panel"]) {
      display: none;
    }

    .loading-dots {
      display: flex;
    }
  }
}

.ids-icon-button.gen-ai-active .loading-dots {
  padding-inline-start: 3px;
  padding-inline-end: 2px;
  padding-block-start: 7px;
  padding-block-end: 8px;
}

// Applies to all non-icon button types
.ids-button,
.ids-toggle-button,
.ids-menu-button:not(.ids-icon-button),
.ids-modal-button:not(.ids-icon-button) {
  // Padding rules for buttons that insert both text/icon into the fallback (unnamed) slot.
  ::slotted(ids-icon:not(:first-child)) { // shadowroot + text + icon
    padding-inline-start: 5px;
    padding-inline-end: 0;
  }

  // Padding rules for standalone CSS buttons (match the rules/style above)
  .ids-icon:last-child,
  span + span:not(.audible),
  span:not(.audible):last-child {
    padding-inline-start: 5px;
  }
}

// Adjustment for about close icon
.ids-modal-button {
  ::slotted(ids-icon:not(:first-child)) { // shadowroot + text + icon
    padding: var(--ids-space-xxxs);
  }
}

// Loading Indicator
:host(:not([show-loading-indicator='true'])) {
  ::slotted(.slot-loading-indicator) {
    display: none;
  }
}

:host([show-loading-indicator='true']) {
  ::slotted(ids-loading-indicator) {
    margin-top: 3px;
    margin-bottom: 3px;
  }
}

:host([show-loading-indicator='true'][loading-indicator-only='true']) {
  ::slotted(*:not(.slot-loading-indicator)) {
    visibility: hidden;
  }
}

:host([show-loading-indicator='true']:not([loading-indicator-only='true'])) {
  ::slotted(.slot-loading-indicator) {
    margin-inline-start: 6px;
  }
}

:host([show-loading-indicator='true']:not([loading-indicator-only='true']):is([appearance='primary'], [appearance='secondary'], [appearance='primary-destructive'])) {
  &::part(button) {
    padding-inline-start: 20px;
    padding-inline-end: 12px;
  }

  ::slotted(.slot-loading-indicator) {
    margin-inline-start: 10px;
  }
}

:host([loading-indicator-only='true']) {
  ::slotted(.slot-loading-indicator) {
    position: absolute;
    margin-inline-start: auto;
    margin-inline-end: auto;
    left: 0;
    right: 0;
  }
}

// Color effects on toggle button
:host(ids-toggle-button) {
  --ids-button-tertiary-color-background-hover: var(--ids-button-toggle-color-background-hover-default);
  --ids-button-tertiary-color-text-hover: var(--ids-button-toggle-color-text-hover-default);
}

:host(ids-toggle-button[pressed]) {
  --ids-button-tertiary-color-text-default: var(--ids-button-toggle-color-text-pressed-default);
}

:host(ids-toggle-button[color='orange']) {
  --ids-button-tertiary-color-background-hover: var(--ids-button-toggle-color-background-hover-orange);
  --ids-button-tertiary-color-text-hover: var(--ids-button-toggle-color-text-hover-orange);
}

:host(ids-toggle-button[pressed][color='orange']) {
  --ids-button-tertiary-color-text-default: var(--ids-button-toggle-color-text-pressed-orange);
}

:host(ids-toggle-button[color='red']) {
  --ids-button-tertiary-color-background-hover: var(--ids-button-toggle-color-background-hover-red);
  --ids-button-tertiary-color-text-hover: var(--ids-button-toggle-color-text-hover-red);
}

:host(ids-toggle-button[pressed][color='red']) {
  --ids-button-tertiary-color-text-default: var(--ids-button-toggle-color-text-pressed-red);
}
