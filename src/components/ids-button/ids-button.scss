/**
 * Ids Button Component CSS
 * (Includes standard and icon button rules)
 */
@import './ids-button-base';

:host {
  @include inline-flex();

  ::slotted(span) {
    vertical-align: bottom;
  }

  ::slotted(span),
  ::slotted(ids-text) {
    color: currentColor;
  }

  ::slotted(ids-icon) {
    vertical-align: middle;
    color: currentColor;
  }

  ::slotted(span.audible) {
    @include audible();
  }

  // Button elements should fill the space inside shadow root
  button {
    width: 100%;
  }
}

// Reset button display styles internally
button {
  display: block;
}

.ripple-effect {
  @include block();
  @include rounded-round();

  opacity: 0;
  position: absolute;
  transform: scale(0);

  &.animating {
    @include animation(ripple-animation 1.2s ease-out);
  }
}

// Applies to all non-icon button types
.ids-button,
.ids-toggle-button,
.ids-menu-button:not(.ids-icon-button),
.ids-modal-button {
  .ids-icon {
    @include inline-flex();

    place-self: center;
    vertical-align: middle;
  }

  .ripple-effect {
    height: 250px;
    width: 250px;
  }
}

.ids-button,
.ids-toggle-button,
.ids-menu-button {
  @include ids-base-button-styles();
  @include ids-standard-button-colors();

  // Technically not valid
  ::slotted(ids-icon:only-child) {
    @include block();
  }

  &:not(.no-padding):not(.ids-icon-button) {
    @include ids-standard-button-padding();
  }

  &.no-padding {
    @include ids-inline-button-padding();
  }
}

.ids-icon-button {
  @include ids-base-button-styles();
  @include ids-standard-button-colors();

  // Everything below is only for icon buttons
  @include px-8();
  @include py-8();

  &:not(.square) {
    @include rounded-round();
  }

  // Fixes an issue that causes the ripple effect not to appear "round" on Safari.
  // NOTE: Needs to be applied only when not focused because it cuts off the focus state.
  &:not(:focus) {
    mask-image: radial-gradient(var(--ids-color-palette-azure-10), var(--ids-color-palette-azure-10));
    /* stylelint-disable property-no-vendor-prefix */
    -webkit-mask-image: radial-gradient(var(--ids-color-palette-azure-10), var(--ids-color-palette-azure-10));
    /* stylelint-enable property-no-vendor-prefix */
  }

  .ids-icon {
    @include block();
    @include pl-0();

    font-size: 0;
  }

  span.audible {
    @include audible();
  }

  .ripple-effect {
    height: 70px;
    width: 70px;
  }
}

// Mix-in special rules for contextual buttons
.ids-button,
.ids-icon-button {
  @include ids-standard-contextual-button-colors();
}

// Specific Modifications for Modal Buttons
// Do not apply styles to modal close icon button, appearance as icon is required
.ids-modal-button:not(.ids-modal-icon-button) {
  @include ids-base-button-styles();
  @include ids-modal-button-colors();
  @include py-12();

  display: block;
  font-weight: 600;

  &:focus {
    z-index: 1;
  }
}

// Adjusting hitbox for the modal close icon
.ids-modal-icon-button {
  @include p-12();
}

@include keyframes(ripple-animation) {
  from {
    opacity: 0.3;
    transform: scale(0);
  }

  to {
    opacity: 0;
    transform: scale(2);
  }
}

// ====================================================
// Swipe Action Buttons (Swipe action component)
.btn-swipe-action-left,
.btn-swipe-action-right {
  @include bg-slate-30();
  @include text-slate-100();

  border-radius: 0;
  display: block;
  padding: 0 8px 8px;
  height: 100%;
  margin: 0;
  white-space: inherit;
  width: 85px;

  ::slotted(ids-icon) {
    display: block;
  }

  &:focus {
    box-shadow: none;
    border-color: transparent;
  }

  &:active {
    @include bg-slate-40();
  }

  &:hover {
    @include bg-slate-40();

    box-shadow: none;
    border-color: transparent;
  }
}

.btn-swipe-action-right {
  @include bg-azure-70();
  @include text-white();

  &:hover {
    @include bg-azure-80();
    @include text-white();
  }

  &:active {
    @include bg-azure-80();
  }
}

.btn-swipe-action-left[mode='dark'] {
  @include bg-slate-60();
}

.btn-swipe-action-right[mode='dark'] {
  @include bg-azure-50();
}

.btn-swipe-action-left[mode='contrast'] {
  @include bg-slate-30();
}

.btn-swipe-action-right[mode='contrast'] {
  @include bg-azure-50();
  @include text-white();
}

.btn-swipe-action-left[mode='light'][version='classic'] {
  @include bg-graphite-30();
}

.btn-swipe-action-right[mode='light'][version='classic'] {
  @include bg-azure-50();
  @include text-white();
}

.btn-swipe-action-left[mode='dark'][version='classic'] {
  @include bg-graphite-60();
}

.btn-swipe-action-right[mode='dark'][version='classic'] {
  @include bg-azure-60();
  @include text-white();
}

.btn-swipe-action-left[mode='contrast'][version='classic'] {
  @include bg-graphite-30();
}

.btn-swipe-action-right[mode='contrast'][version='classic'] {
  @include bg-azure-50();
  @include text-white();
}

// Non-RTL Styles
:not(.rtl) {
  // Applies to all non-icon button types
  &.ids-button,
  &.ids-toggle-button,
  &.ids-menu-button:not(.ids-icon-button),
  &.ids-modal-button {
    // Padding rules for buttons that insert both text/icon into the fallback (unnamed) slot.
    ::slotted(ids-icon:not(:first-child)), // shadowroot + text + icon
    ::slotted(span:nth-child(2):last-child), // shadowroot + icon + text
    ::slotted(ids-text:nth-child(2):last-child),
    ::slotted(span:nth-child(3):last-child), // shadowroot + icon + (audible text) + text
    ::slotted(ids-text:nth-child(3):last-child) {
      @include pl-4();
    }

    // Padding rules for standalone CSS buttons (match the rules/style above)
    .ids-icon:last-child,
    span + span,
    span:last-child {
      @include pl-4();
    }
  }
}

// RTL Styles
.rtl {
  // Applies to all non-icon button types
  &.ids-button,
  &.ids-toggle-button,
  &.ids-menu-button:not(.ids-icon-button),
  &.ids-modal-button {
    // Padding rules for buttons that insert both text/icon into the fallback (unnamed) slot.
    ::slotted(ids-icon:not(:first-child)), // shadowroot + text + icon
    ::slotted(span:nth-child(2):last-child), // shadowroot + icon + text
    ::slotted(ids-text:nth-child(2):last-child),
    ::slotted(span:nth-child(3):last-child), // shadowroot + icon + (audible text) + text
    ::slotted(ids-text:nth-child(3):last-child) {
      @include pr-4();

      padding-left: auto;
    }

    // Padding rules for standalone CSS buttons (match the rules/style above)
    .ids-icon:last-child,
    span + span,
    span:last-child {
      @include pr-4();

      padding-left: auto;
    }
  }
}
