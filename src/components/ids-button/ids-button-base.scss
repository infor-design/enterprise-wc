/**
 * Ids Button Sass mixins, used in Ids Button CSS to define base styles.
 */
@use '../../themes/mixins/ids-core-mixins' as mixins;
@import '../../themes/mixins/ids-ripple-mixin';

// Mixin for a "blank" shadow (same as the standard one with a completely transparent alpha)
@mixin blank-shadow() {
  box-shadow: var(--ids-shadow-none);
}

// Used to make the focus "border" appear to be separated from the button (primary/secondary types).
@mixin outset-button-shadow($bg-color, $border-color) {
  box-shadow:
    0 0 0 2px $bg-color, // bg color
    0 0 0 3px $border-color, // primary color (border)
    0 0 4px 3px $border-color // primary color (shadowy-part)
}

// Used to make the focus "border" on non-solid buttons (modal buttons, etc)
@mixin modal-button-shadow() {
  box-shadow: var(--ids-modal-shadow-focus); // primary color (shadowy-part)
}

@mixin alternate-button-shadow() {
  box-shadow: var(--ids-box-shadow-inverse);
}

// Used to include a basic set of button styles within each individual button prototype.
@mixin ids-base-button-styles() {
  @include blank-shadow();

  font-weight: var(--ids-font-weight-normal);
  font-family: var(--ids-font-family-default);
  font-size: var(--ids-font-size-40);
  overflow: hidden;
  padding-bottom: calc(var(--ids-space-40) - 2px);
  padding-top: calc(var(--ids-space-40) - 2px);
  position: relative;

  &,
  &::before,
  &::after {
    box-sizing: border-box;
  }

  // Nothing inside the button itself should accept mouse events
  * {
    pointer-events: none;
  }

  // ====================================================
  // Base Button styles (default/tertiary)

  border: 1px solid transparent;
  background-color: transparent;
  color: var(--ids-button-color-text-default);

  // Animate BG/Text/Border color changes on all styles
  transition:
    background-color var(--ids-motion-duration) var(--ids-motion-ease),
    border-color var(--ids-motion-duration) var(--ids-motion-ease),
    box-shadow var(--ids-motion-duration) var(--ids-motion-ease),
    color var(--ids-motion-duration) var(--ids-motion-ease),
    opacity var(--ids-motion-duration) var(--ids-motion-ease);
  white-space: nowrap;

  &:focus {
    // Disable standard focus state in Chrome
    outline: none;
    outline-color: transparent;
  }

  &:not([disabled]) {
   cursor: var(--ids-cursor-pointer);
  }

  // ====================================================
  // Standard element types inside the button
  span {
    vertical-align: bottom;

    &.audible {
      @include mixins.audible();
    }
  }

  &:not(.ids-icon-button) ::slotted(ids-icon) {
    padding-inline-end: var(--ids-space-30);
  }

  .ids-icon {
    vertical-align: middle;
  }

  // ====================================================
  // Alignment changes

  &.align-icon-end {
    ::slotted(ids-icon) {
      padding-inline-start: var(--ids-space-30);
    }
  }

  &.content-align-start {
    justify-content: start;
  }

  &.content-align-end {
    justify-content: end;
  }

  &.no-margins {
    margin-inline: var(--ids-space-none);
  }

  // Account for 2px borders on secondary buttons
  &:not(.btn-secondary):not(.no-margins) {
    margin: var(--ids-space-10);
  }

  &.field-height-xxs:not(.btn-secondary):not(.no-margins) {
    margin-block-start: 3px;
    margin-inline-end: -2px;
    height: 22px;
    width: 22px;
  }

  ::slotted(span) {
    // important due to reset in enterprise
    font-weight: inherit !important;
  }
}

/**
 * Provides standardized padding rules for certain button types
 */
@mixin ids-standard-button-padding() {
  padding-inline: var(--ids-space-90);
}

@mixin ids-inline-button-padding() {
  padding-inline: var(--ids-space-50);
}

/**
 * Provides the standard color rules for all regular buttons
 */
@mixin ids-standard-button-colors() {
  display: inline-flex;
  font-weight: var(--ids-button-tertiary-font-weight);
  border-radius: var(--ids-border-radius-03);

  // ====================================================
  // Default/Tertiary Button
  border-color: var(--ids-button-tertiary-color-border-default);
  color: var(--ids-button-tertiary-color-text-default);

  &:not(.hide-focus).is-active,
  &:not(.hide-focus):focus {
    border-color: var(--ids-button-tertiary-color-border-focus);
  }

  &:hover {
    color: var(--ids-button-tertiary-color-text-hover);
    background-color: var(--ids-button-tertiary-color-background-hover);
  }

  &[disabled] {
    color: var(--ids-button-tertiary-color-text-disabled);
    background-color: var(--ids-button-tertiary-disabled-background-color);
  }

  .ripple-effect {
    background-color: var(--ids-button-tertiary-color-background-pressed);
  }

  // ====================================================
  // Tertiary Destructive Button
  &.btn-tertiary-destructive {
    color: var(--ids-color-error-default);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-color-error-70);
    }

    &:hover {
      background-color: var(--ids-button-destructive-color-background-hover);
      color: var(--ids-color-error-70);
    }

    &[disabled] {
      color: var(--ids-button-tertiary-color-text-disabled);
      background-color: transparent;
    }

    .ripple-effect {
      background-color: var(--ids-color-error-default);
    }
  }

  // ====================================================
  // Primary Button

  &.btn-primary {
    background-color: var(--ids-button-primary-color-background-default);
    border-color: var(--ids-button-primary-color-border-default);
    border: 1px solid var(--ids-button-primary-color-border-default);
    color: var(--ids-button-primary-color-text-default);
    padding-bottom: calc(var(--ids-space-40) - 1px);
    padding-top: calc(var(--ids-space-40) - 1px);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-primary-color-border-focus);
    }

    &:hover {
      background-color: var(--ids-button-primary-color-background-hover);
      border-color: var(--ids-button-primary-color-border-hover);
    }

    &[disabled] {
      background-color: var(--ids-button-primary-color-background-disabled);
      border-color: var(--ids-button-primary-color-border-disabled);
      color: var(--ids-button-primary-color-text-disabled);
    }

    .ripple-effect {
      background-color: var(--ids-button-primary-color-background-pressed);
    }
  }

  // ====================================================
  // Primary Destructive Button

  &.btn-primary-destructive {
    background-color: var(--ids-color-error-default);
    border-color: var(--ids-color-error-default);
    color: var(--ids-color-text-on-error);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-color-error-default);
    }

    &:hover {
      background-color: var(--ids-color-error-70);
      border-color: var(--ids-color-error-70);
    }

    &[disabled] {
      background-color: var( --ids-button-primary-color-background-disabled);
      border-color: var(--ids-button-primary-color-border-disabled);
      color: var(--ids-button-primary-color-text-disabled);
    }

    .ripple-effect {
      background-color: var(--ids-color-text-on-error);
    }
  }

  // ====================================================
  // Secondary Button

  &.btn-secondary {
    background-color: var(--ids-button-secondary-color-background-default);
    border-width: var(--ids-button-secondary-border-width);
    border-color: var(--ids-button-secondary-color-border-default);
    color: var(--ids-button-secondary-color-text-default);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-secondary-color-border-focus);
    }

    &:hover {
      background-color: var(--ids-button-secondary-color-background-hover);
    }

    &[disabled] {
      background-color: var(--ids-button-secondary-color-background-disabled);
      border-color: var(--ids-button-secondary-color-border-disabled);
      color: var(--ids-button-secondary-color-text-disabled);
    }

    .ripple-effect {
      background-color: var(--ids-button-secondary-color-background-pressed);
    }
  }

  // ====================================================
  // Light Mode Alternate

  // Don't apply these rules to "alternate-formatter"-style buttons
  // These appear in header
  &.color-variant-alternate {
    &:hover {
      background-color: rgba(0 0 0 / 0.3);
    }

    &.ids-trigger-button:not([readonly]) {
      &:hover {
        background-color: var(--ids-search-field-header-color-icon-hover);
      }
    }
  }

  // These appear in app menu
  &.color-variant-app-menu {
    &:hover {
      background-color: rgba(255 255 255 / 0.15);
    }
  }

  // These appear in places with dark background like app menu and masthead, generally default/tertiary buttons
  &.color-variant-alternate,
  &.color-variant-alternate-formatter {
    color: var(--ids-button-alternate-color-text-default);
    opacity: 0.8;

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-button-formatter-color-border-focus);
      opacity: 1;
    }

    &:hover {
      background-color: var(--ids-button-formatter-color-background-hover);
      color: var(--ids-button-formatter-color-text-hover);
      opacity: 1;
    }

    &[disabled] {
      background-color: transparent;
      opacity: var(--ids-button-formatter-opacity-disabled);
    }

    .ripple-effect {
      background-color: var(--ids-button-alternate-color-background-pressed);
    }
  }

  // Used on Editor and List Builder "darker" toolbars
  &.color-variant-alternate-formatter {
    color: var(--ids-button-formatter-color-text-default);
    margin-top: 2px;
    height: var(--ids-button-formatter-size);
    min-width:  var(--ids-button-formatter-size);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      border-color: var(--ids-color-border-focus);
    }

    &[disabled] {
      color: var(--ids-button-formatter-color-text-disabled);
    }

    &:hover {
      background-color: var(--ids-button-formatter-color-background-hover);
      color: var(--ids-button-formatter-color-text-hover);
    }

    .ripple-effect {
      background-color: var(--ids-color-primary-light);
    }

    &.is-active {
      color: var(--ids-button-formatter-color-active);
    }

    &.ids-menu-button.compact {
      padding: var(--ids-space-30);
      padding-inline: var(--ids-space-30);

      &.square {
        border-radius: var(--ids-border-radius-02);
      }
    }
  }

  // Used in Tab Module Variant
  &.color-variant-module {
    color: var(--ids-button-module-color-text-default);


    &:not(.square) {
      border-radius: var(--ids-button-module-border-radius);
    }

    &:hover {
      background-color: var(--ids-button-module-color-background-hover);
      color: var(--ids-button-module-color-text-hover);
    }
  }
}

/**
 * Provides the standard color rules for buttons that need box shadow
 */
@mixin ids-standard-button-shadows() {
  &:not(.btn-primary):not(.btn-secondary):not(.btn-primary-destructive):not(.btn-tertiary-destructive) {
    // ====================================================
    // Default/Tertiary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-button-tertiary-shadow-focus);
    }

    &.color-variant-alternate {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        box-shadow: var(--ids-box-shadow-inverse);
      }
    }

    &.color-variant-alternate-formatter {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        box-shadow: var(--ids-shadow-20);
      }
    }
  }

  &.btn-tertiary-destructive {
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-shadow-error);
    }
  }

  &.btn-primary {
    // ====================================================
    // Primary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-button-primary-shadow-focus);
    }

    &.color-variant-alternate {
      &:not(.hide-focus).is-active,
      &:not(.hide-focus):focus {
        @include outset-button-shadow(
          var(--ids-color-primary-70),
          var(--ids-color-text-on-primary)
        );
      }
    }
  }

  &.btn-primary-destructive {
    // ====================================================
    // Primary Destructive Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include outset-button-shadow(
        var(--ids-color-background-default),
        var(--ids-color-error-default)
      );
    }
  }

  &.btn-secondary {
    // ====================================================
    // Secondary Default/Light Mode
    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      box-shadow: var(--ids-button-secondary-shadow-focus);
    }
  }
}

@mixin ids-modal-button-color-defaults() {
  // ====================================================
  // Primary Button
  &.btn-primary {
    background-color: var(--ids-modal-color-background);
    color: var(--ids-modal-button-color-default);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include modal-button-shadow();
    }

    &:hover {
      color: var(--ids-modal-button-color-hover);
    }

    &[disabled] {
      opacity: 0.3;
    }

    .ripple-effect {
      background-color: var(--ids-modal-button-color-default);
    }
  }

  // ====================================================
  // Secondary/Tertiary Button

  &.btn-secondary,
  &.btn-tertiary {
    background-color: var(--ids-modal-color-background);
    color: var(--ids-color-neutral-80);

    &:not(.hide-focus).is-active,
    &:not(.hide-focus):focus {
      @include modal-button-shadow();
    }

    &:hover {
      color: var(--ids-color-neutral-100);
    }

    &[disabled] {
      background-color: var(--ids-button-secondary-color-border-disabled);
      border-color: var(--ids-button-secondary-color-border-disabled);
    }

    .ripple-effect {
      background-color: var(--ids-color-primary-70);
    }
  }
}

