@import '../../core/ids-base';
@import '../../mixins/sass/ids-clearable-mixin';
@import '../../mixins/sass/ids-dirty-tracker-mixin';
@import '../../mixins/sass/ids-label-state-mixin';
@import '../../mixins/sass/ids-validation-mixin';

// Set default
$input-size-default: $input-size-md;
$input-field-height-default: $input-field-height-md;
$input-compact-height: $input-field-height-xs;

// These input field sizes come from the design tokens and are adjusted
// here to account for 1px border size on top/bottom or left/right in some calculations.
$border-input-size-xs: $input-size-xs - 2;
$border-input-size-sm: $input-size-sm - 2;
$border-input-size-md: $input-size-md - 2;
$border-input-size-mm: $input-size-mm - 2;
$border-input-size-lg: $input-size-lg - 2;
$border-input-size-full: $input-size-full - 2;
$border-input-field-height-compact: $input-compact-height - 2;
$border-input-field-height-xs: $input-field-height-xs - 2;
$border-input-field-height-sm: $input-field-height-sm - 2;
$border-input-field-height-md: $input-field-height-md - 2;
$border-input-field-height-lg: $input-field-height-lg - 2;

// Mixin for message styles: [alert, error, info, success]
@mixin ids-input-message-styles {
  .alert,
  .alert:hover {
    @include border-alert-warning();
    @include text-alert-warning();

    &:focus-within,
    &.is-active {
      @include border-alert-warning();

      box-shadow: rgba(249 131 0 / 0.3) 0 0 3px 2px;
    }

    &[disabled] {
      @include border-amber-30();
      @include text-amber-30();
    }
  }

  .error,
  .error:hover {
    @include border-alert-error();
    @include text-alert-error();

    &:focus-within,
    &.is-active {
      @include border-alert-error();
      @include shadow-error();
    }

    &[disabled] {
      @include border-ruby-30();
      @include text-ruby-30();
    }
  }

  .info,
  .info:hover {
    @include border-alert-info();
    @include text-alert-info();

    &:focus-within,
    &.is-active {
      @include border-alert-info();

      box-shadow: rgba(0 102 212 / 0.3) 0 0 3px 2px;
    }

    &[disabled] {
      @include border-azure-30();
      @include text-azure-30();
    }
  }

  .success,
  .success:hover {
    @include border-alert-success();
    @include text-alert-success();

    &:focus-within,
    &.is-active {
      @include border-alert-success();

      box-shadow: rgba(42 195 113 / 0.3) 0 0 3px 2px;
    }

    &[disabled] {
      @include border-emerald-30();
      @include text-emerald-30();
    }
  }
}

/* in case of external label in compound component */
.ids-label-text {
  @include antialiased();
  @include font-sans();
  @include text-slate-60();
  @include mb-4();

  align-items: baseline;
  display: flex;

  // Simulate standard label text size while empty with a non-breaking space
  &.empty {
    &::before {
      content: '\00a0';
    }
  }

  &.required {
    &::after {
      @include relative();
      @include font-sans();
      @include mx-2();
      @include text-20();
      @include text-alert-error();

      content: '*';
      margin-top: -10px;
      top: 1px;
    }

    &.no-required-indicator::after {
      content: '';
    }
  }
}

.disabled {
  .ids-label-text {
    @include text-slate-30();

    &.required::after {
      @include text-ruby-30();
    }
  }
}

@mixin input-extra-small-height($h: $border-input-field-height-xs) {
  @include mb-12();

  .ids-label-text {
    @include text-14();
  }

  .ids-input-field {
    @include px-4();
    @include py-0();
    @include text-14();

    height: $h;
  }
}

:host([size='full']) {
  @include w-full();
}

.ids-input {
  @include block();
  @include mb-16();

  // Applied to the wrapper element that wraps the input and other interactable elements
  .field-container {
    @include css3(transition, border $transition-length $transition-ease);
    @include m-0();
    @include p-0();
    @include relative();
    @include border-1();
    @include border-solid();
    @include rounded-default();

    align-items: center;
    border-collapse: separate;
    border-radius: 2px;
    color: inherit;
    resize: none;
    text-align: left;
    display: flex;
    max-width: $input-size-default;
  }

  &:focus-within,
  &.readonly:focus-within,
  &.is-active {
    .ids-input-field {
      outline: none;
      outline-color: transparent;
    }
  }

  .ids-icon.starting-icon {
    @include ml-8();
  }

  .ids-icon.ending-icon {
    @include mr-8();
  }

  // Applied to the shadow root's HTMLInputElement
  .ids-input-field {
    @include antialiased();
    @include bg-transparent();
    @include box-border();
    @include border-none();
    @include font-sans();
    @include py-4();
    @include px-8();
    @include text-16();
    @include w-full();

    &:focus-visible {
      outline: none;
    }

    appearance: none;
    color: currentColor;
    display: inline-block;
    height: fit-content;
    resize: none;
    text-align: left;

    &.text-ellipsis {
      @include ellipsis();
    }

    // input text-align: [left, center, right]
    &.left {
      text-align: start;
    }

    &.center {
      text-align: center;
    }

    &.right {
      text-align: end;
    }
  }

  // Validation Messages are appended beneath the `.field-container`
  .validation-message {
    @include mt-4();
    @include mb-0();
  }

  // If `no-margins` is used:
  // - margins are removed from component top/bottom
  // - labels are visually hidden instead of displaying blank content for spacing
  &.no-margins,
  &.no-margins.compact {
    margin: 0;

    .field-container {
      @include mb-0();
    }

    .ids-input-field {
      @include m-0();
    }

    // Reverse the margins on `ids-input[no-margins]` fields to have the bottom margin on top
    .validation-message {
      @include mb-0();
      @include mt-4();
    }

    .ids-label-text {
      &.empty {
        @include m-0();

        visibility: hidden;
        height: 0;
      }
    }
  }

  // input sizes: [xs, sm, mm, md, lg, full]
  // Subtracting 2 takes into account that the width includes the `.field-container` border on both sides.
  &.xs .field-container {
    max-width: $border-input-size-xs;
  }

  &.sm .field-container {
    max-width: $border-input-size-sm;
  }

  &.mm .field-container {
    max-width: $border-input-size-mm;
  }

  &.md .field-container {
    max-width: $border-input-size-md;
  }

  &.lg .field-container {
    max-width: $border-input-size-lg;
  }

  &.full .field-container {
    max-width: $border-input-size-full;
  }

  // input field-heights: [xs, sm, md, lg]
  // Subtracting 2 takes into account that the width includes the `.field-container` border on both sides.
  &.field-height-xs {
    @include input-extra-small-height();

    &.no-margin-bottom {
      margin-bottom: 0;

      .field-container,
      .ids-input-field {
        margin-bottom: 0;
      }
    }
  }

  &.field-height-sm .ids-input-field {
    height: $border-input-field-height-sm;
  }

  &.field-height-md .ids-input-field {
    height: $border-input-field-height-md;
  }

  &.field-height-lg .ids-input-field {
    height: $border-input-field-height-lg;
  }

  // input compact
  &.compact {
    @include input-extra-small-height($border-input-field-height-compact);

    &.no-margin-bottom {
      margin-bottom: 0;

      .field-container,
      .ids-input-field {
        margin-bottom: 0;
        height: $border-input-field-height-compact;
      }
    }
  }
}

// =======================================================
// Handle Themes

.ids-input[version='new'][mode='light'],
.ids-input:not([mode]) {
  .field-container {
    @include bg-white();
    @include border-slate-40();
    @include text-black();
  }

  &.readonly {
    .field-container,
    &.hover .field-container,
    &.focus-within .field-container {
      @include border-slate-40();
      @include text-black();

      &.error,
      &.error:hover {
        @include border-alert-error();
        @include text-alert-error();
      }
    }

    &:not(.readonly-background):not(.bg-transparent) {
      .field-container,
      &.hover .field-container,
      &.focus-within .field-container {
        @include bg-slate-20();
      }
    }
  }

  &.disabled {
    .field-container,
    &:hover .field-container,
    &:focus-within .field-container {
      @include border-slate-30();
      @include text-slate-30();
    }
  }

  &.bg-transparent {
    .field-container,
    &.readonly .field-container,
    &.disabled .field-container {
      @include bg-transparent();
    }

    &:focus-within {
      .field-container {
        @include bg-transparent();
      }
    }
  }

  &:hover {
    .field-container {
      @include border-slate-90();
    }
  }

  &:focus-within,
  &.readonly:focus-within,
  &.is-active {
    .field-container {
      @include border-azure-60();
      @include shadow();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  // Alternate Color Variant (used in IdsHeader)
  &.color-variant-alternate {
    .field-container {
      @include border-transparent();
      @include text-white();

      background-color: rgba(71 71 76 / 0.3);
      border-bottom: 1px solid rgba(62 62 66 / 0.7);
    }

    .ids-input-field::placeholder {
      color: rgba(255 255 255 / 0.7);
    }
  }

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-30();
      @include text-white();
    }

    &:hover .field-container {
      @include border-slate-20();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-60);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-50();
      @include text-slate-40();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-80();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.ids-input[version='new'][mode='dark'] {
  .field-container {
    @include bg-transparent();
    @include border-slate-40();
    @include text-white();
  }

  &.disabled {
    .field-container {
      @include border-slate-60();
      @include text-slate-60();
    }
  }

  &.readonly {
    .field-container {
      @include border-slate-40();
      @include text-slate-10();
    }

    &:not(.readonly-background):not(.bg-transparent) {
      .field-container,
      &.hover .field-container,
      &.focus-within .field-container {
        @include bg-slate-70();
      }
    }
  }

  &.bg-transparent {
    .field-container {
      @include bg-transparent();
    }
  }

  &:focus-within,
  &.is-active {
    .field-container {
      @include border-azure-60();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  &.color-variant-alternate,
  &.color-variant-app-menu {
    .field-container {
      @include text-white();
    }
  }

  // Alternate Color Variant (used in IdsHeader)
  &.color-variant-alternate {
    .field-container {
      @include border-transparent();

      background-color: rgba(71 71 76 / 0.3);
      border-bottom: 1px solid rgba(62 62 66 / 0.7);
    }

    .ids-input-field::placeholder {
      color: rgba(255 255 255 / 0.7);
    }
  }

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-50();
      @include text-slate-100();
    }

    &:hover .field-container {
      @include border-slate-70();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-50);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-60();
      @include text-slate-50();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-30();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.ids-input[version='new'][mode='contrast'] {
  .field-container {
    @include bg-white();
    @include border-slate-40();
    @include text-black();
  }

  &.disabled {
    .field-container {
      @include border-slate-30();
      @include text-slate-30();
    }
  }

  &.readonly {
    .field-container {
      @include border-slate-40();
      @include text-slate-100();
    }

    &:not(.readonly-background):not(.bg-transparent) {
      .field-container,
      &.hover .field-container,
      &.focus-within .field-container {
        @include bg-slate-20();
      }
    }
  }

  &.bg-transparent {
    .field-container {
      @include bg-transparent();
    }
  }

  &:focus-within,
  &.is-active {
    .field-container {
      @include border-azure-90();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  &.color-variant-alternate,
  &.color-variant-app-menu {
    .field-container {
      @include text-white();
    }
  }

  // Alternate Color Variant (used in IdsHeader)
  &.color-variant-alternate {
    .field-container {
      @include border-transparent();

      background-color: rgba(71 71 76 / 0.3);
      border-bottom: 1px solid rgba(62 62 66 / 0.7);
    }

    .ids-input-field::placeholder {
      color: rgba(255 255 255 / 0.7);
    }
  }

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-30();
      @include text-white();
    }

    &:hover .field-container {
      @include border-slate-20();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-60);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-50();
      @include text-slate-40();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-80();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.ids-input[version='classic'][mode='light'] {
  .field-container {
    @include bg-transparent();
    @include border-graphite-40();
    @include text-graphite-100();
  }

  &.disabled {
    .field-container {
      @include border-graphite-30();
      @include text-graphite-40();
    }
  }

  &.readonly {
    .field-container {
      @include bg-graphite-20();
      @include border-graphite-40();
      @include text-classic-slate-100();
    }
  }

  &.bg-transparent {
    .field-container {
      @include bg-transparent();
    }
  }

  &:focus-within,
  &.is-active {
    .field-container {
      @include border-azure-60();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  // Alternate Color Variant
  &.color-variant-alternate {
    .field-container {
      @include text-white();
    }
  }

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-30();
      @include text-white();
    }

    &:hover .field-container {
      @include border-slate-20();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-60);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-50();
      @include text-slate-40();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-80();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.ids-input[version='classic'][mode='dark'] {
  .field-container {
    @include bg-transparent();
    @include border-slate-40();
    @include text-white();
  }

  &.disabled {
    .field-container {
      @include border-classic-slate-40();
      @include text-classic-slate-50();
    }
  }

  &.readonly {
    .field-container {
      @include bg-classic-slate-60();
      @include border-classic-slate-40();
      @include text-white();
    }
  }

  &.bg-transparent {
    .field-container {
      @include bg-transparent();
    }
  }

  &:focus-within,
  &.is-active {
    .field-container {
      @include border-azure-60();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-50();
      @include text-slate-100();
    }

    &:hover .field-container {
      @include border-slate-70();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-50);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-60();
      @include text-slate-50();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-30();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.ids-input[version='classic'][mode='contrast'] {
  .field-container {
    @include bg-white();
    @include border-graphite-80();
    @include text-graphite-100();
  }

  &.disabled {
    .field-container {
      @include bg-transparent();
      @include border-slate-50();
      @include text-graphite-80();
    }
  }

  &.readonly {
    .field-container {
      @include bg-slate-30();
      @include border-slate-80();
      @include text-graphite-100();
    }
  }

  &.bg-transparent {
    .field-container {
      @include bg-transparent();
    }
  }

  &:focus-within,
  &:focus-within[readonly],
  &.is-active {
    .field-container {
      @include border-azure-60();
    }
  }

  // Include error styles
  @include ids-input-message-styles();

  // Alternate Color Variant
  &.color-variant-alternate {
    .field-container {
      @include text-white();
    }
  }

  // Alternate-formatter Color Variant (used in IdsDataGrid filter)
  &.color-variant-alternate-formatter {
    .field-container {
      @include bg-transparent();
      @include border-slate-30();
      @include text-white();
    }

    &:hover .field-container {
      @include border-slate-20();
    }

    &:focus-within {
      .field-container,
      &:hover .field-container {
        @include border-azure-50();
      }

      .ids-input-field {
        box-shadow: 0 0 3px 1px var(--ids-color-palette-azure-60);
      }
    }

    &.disabled .field-container,
    &.disabled:hover .field-container {
      @include border-slate-50();
      @include text-slate-40();
    }

    &.readonly:not(.readonly-background):not(.bg-transparent) .field-container {
      @include text-slate-80();
    }

    .ids-input-field::placeholder {
      @include text-slate-40();
    }
  }
}

.caps-lock-indicator {
  @include px-8();
}

.highlight {
  font-weight: var(--ids-number-font-weight-bold);
}
