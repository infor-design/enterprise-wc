@use '../../themes/mixins/ids-core-mixins.scss' as mixins;
@import '../../themes/mixins/ids-clearable-mixin';
@import '../../themes/mixins/ids-dirty-tracker-mixin';
@import '../../themes/mixins/ids-validation-mixin';

// Field Sizes
$textarea-size-sm: 150px;
$textarea-size-md: 362px;
$textarea-size-lg: 400px;
$textarea-size-full: 100%;

// Set default size
$textarea-size-default: $textarea-size-md;
$textarea-size-default-height: 120px;

.ids-textarea {
  display: block;
  margin-bottom: var(--ids-space-12);
  font-size: var(--ids-font-size-sm);
  font-family: var(--ids-font-family-default), var(--ids-font-family-system-sans);

  .hidden {
    display: none;
  }

  .textarea-print {
    display: none;
    white-space: pre-line;
  }

  .textarea-character-counter {
    display: inline-block;
    min-height: auto;
    width: $textarea-size-default;

    &.almost-empty {
      color: var(--ids-textarea-character-count-color-text-warning);
    }
  }

  .field-container {
    margin: var(--ids-space-none);
    padding: var(--ids-space-none);
    position: relative;
    display: flex;
  }

  // Set max widths on textareas that are not resizable on the X-plane
  &:not(.resizable):not(.resizable-x) {
    .field-container {
      max-width: $textarea-size-default;

      // textarea sizes: [sm, md, lg, full]
      &.sm {
        max-width: $textarea-size-sm;

        ~ .textarea-character-counter {
          width: $textarea-size-sm;
        }
      }

      &.md {
        max-width: $textarea-size-md;

        ~ .textarea-character-counter {
          width: $textarea-size-md;
        }
      }

      &.lg {
        max-width: $textarea-size-lg;

        ~ .textarea-character-counter {
          width: $textarea-size-lg;
        }
      }

      &.full {
        max-width: $textarea-size-full;

        ~ .textarea-character-counter {
          width: $textarea-size-full;
        }
      }
    }
  }

  &.resizable,
  &.resizable-x {
    .ids-textarea-field {
      width: $textarea-size-default;
    }

    &.sm .ids-textarea-field {
      width: $textarea-size-sm;
    }

    &.md .ids-textarea-field {
      width: $textarea-size-md;
    }

    &.lg .ids-textarea-field {
      width: $textarea-size-lg;
    }

    &.full .ids-textarea-field {
      width: $textarea-size-full;
    }
  }

  &:not(.resizable):not(.resizable-y) {
    .ids-textarea-field {
      min-height: $textarea-size-default-height;
    }
  }

  &.resizable,
  &.resizable-y {
    .ids-textarea-field {
      height: $textarea-size-default-height;
    }
  }

  &:not([class*='resizable']) {
    .ids-textarea-field {
      resize: none;
    }
  }

  &.resizable-x {
    .ids-textarea-field {
      resize: horizontal;
    }
  }

  &.resizable-y {
    .ids-textarea-field {
      resize: vertical;
    }
  }

  &.resizable {
    .ids-textarea-field {
      resize: both;
    }
  }

  .ids-textarea-field {
    @include mixins.antialiased();

    background-color: var(--ids-textarea-color-background-default);
    border: 1px solid;
    border-color: var(--ids-textarea-color-border-default);
    color: var(--ids-textarea-color-text-default);
    box-sizing: border-box;
    margin-bottom: var(--ids-space-2xs);
    padding: var(--ids-space-12);
    font-size: var(--ids-font-size-sm);
    appearance: none;
    font-family: var(--ids-font-family-default), var(--ids-font-family-system-sans);
    border-collapse: separate;
    border-radius: var(--ids-border-radius-2xs);
    display: inline-block;
    text-align: left;
    width: 100%;

    &[readonly] {
      background-color: var(--ids-textarea-color-background-readonly);
      border-color: var(--ids-textarea-color-border-readonly);
      color: var(--ids-textarea-color-text-readonly);
    }

    &[disabled] {
      background-color: var(--ids-textarea-color-background-disabled);
      border-color: var(--ids-textarea-color-border-disabled);
      color: var(--ids-textarea-color-text-disabled);
      opacity: var(--ids-textarea-disabled-opacity);
    }

    &:not([disabled]):not([readonly]):not(:focus):hover {
      border-color: var(--ids-textarea-color-border-hover);
    }

    &:focus {
      border-color: var(--ids-textarea-color-border-focus);
      box-shadow: var(--ids-textarea-shadow-focus);
      outline: none;
      outline-color: var(--ids-color-transparent);
    }

    &[readonly],
    &[disabled] {
      ~ .textarea-character-counter {
        display: none;
      }
    }

    &[rows] {
      height: auto;
    }

    &.bg-transparent {
      background-color: var(--ids-color-transparent);

      &:focus {
        border-color: var(--ids-textarea-color-border-focus);
      }
    }

    &.text-ellipsis {
      text-overflow: ellipsis;
    }


    // textarea text-align: [left, center, right]
    &.left {
      text-align: start;
    }

    &.center {
      text-align: center;
    }

    &.right {
      text-align: end;
    }

    ~ .btn-clear {
      margin-top: var(--ids-space-2xs);
      position: absolute;
      right: 0;
    }
  }

  // Error Styles
  .error {
    .ids-textarea-field {
      border-color: var(--ids-textarea-color-border-error-default);
      color: var(--ids-textarea-color-text-error);

      &:focus {
        border-color: var(--ids-textarea-color-border-error-focus);
        box-shadow: var(--ids-textarea-shadow-error-focus);
      }

      &[disabled] {
        border-color: var(--ids-textarea-color-border-error-disabled);
        color: var(--ids-textarea-color-text-error-disabled);
      }

      &:hover {
        border-color: var(--ids-textarea-color-border-error-default);
      }
    }
  }

  // warning, error, info, success Styles
  &.warning {
    .ids-textarea-field {
      border-color: var(--ids-textarea-warning-color-border-default);
      color: var(--ids-textarea-warning-color-text-default);

      &:focus {
        border-color: var(--ids-textarea-warning-color-border-focus);
        box-shadow: var(--ids-textarea-shadow-warning-focus);
      }

      &[disabled] {
        border-color: var(--ids-textarea-warning-color-border-disabled);
        color: var(--ids-textarea-warning-color-text-disabled);
      }

      &:hover {
        border-color: var(--ids-textarea-warning-color-border-default);
      }
    }
  }

  &.info {
    .ids-textarea-field {
      border-color: var(--ids-textarea-color-border-info-default);
      color: var(--ids-textarea-color-text-info-default);

      &:focus {
        border-color: var(--ids-textarea-color-border-info-focus);
        box-shadow: rgba(0 102 212 / 0.3) 0 0 3px 2px;
      }

      &[disabled] {
        border-color: var(--ids-textarea-color-border-info-disabled);
        color: var(--ids-textarea-color-text-info-disabled);
      }

      &:hover {
        border-color: var(--ids-textarea-color-border-info-default);
      }
    }
  }

  &.success {
    .ids-textarea-field {
      border-color: var(--ids-textarea-color-border-success-default);
      color: var(--ids-textarea-color-text-success-default);

      &:focus {
        border-color: var(--ids-textarea-color-border-success-focus);
        box-shadow: var(--ids-textarea-shadow-success-focus);
      }

      &[disabled] {
        border-color: var(--ids-textarea-color-border-success-disabled);
        color: var(--ids-textarea-color-text-success-disabled);
      }

      &:hover {
        border-color: var(--ids-textarea-color-border-success-default);
      }
    }
  }

  .validation-message {
    margin-top: var(--ids-space-2xs);
  }

  &.disabled {
    .label-text {
      color: var(--ids-textarea-label-color-text-disabled);

      &.required::after {
        color: var(--ids-textarea-label-color-text-disabled);
      }
    }
  }
}

.ids-label-text {
  @include mixins.antialiased();

  color: var(--ids-textarea-label-color-text-default);
  margin-bottom: var(--ids-space-xs);
  align-items: baseline;
  font-family: var(--ids-font-family-default), var(--ids-font-family-system-sans);
  display: flex;

  // Simulate standard label text size while empty with a non-breaking space
  &.empty {
    &::before {
      content: '\00a0';
    }
  }

  &.required {
    &::after {
      position: relative;
      padding-inline: var(--ids-space-3xs);
      font-size: var(--ids-font-size-md);
      content: '*';
      color: var(--ids-input-required-indicator-color-text-default);
      font-family: var(--ids-font-family-default), var(--ids-font-family-system-sans);
      margin-top: -10px;
      top: 1px;
    }

    &.no-required-indicator::after,
    &.empty::after {
      content: '';
    }
  }
}

.label-state-collapsed {
  .ids-label-text.empty {
    margin: var(--ids-space-none);
    visibility: hidden;
    height: 0;
  }
}

// Print Style Sheet
@media print {
  .ids-textarea {
    .textarea-character-counter,
    .ids-textarea-field {
      display: none;
    }
  }

  .textarea-print {
    display: inline-block;
    height: auto;
    width: auto;
  }
}
