/* Ids Editor Component */
@use '../../themes/mixins/ids-core-mixins' as mixins;
@import '../../themes/mixins/ids-dirty-tracker-mixin';
@import '../../themes/mixins/ids-validation-mixin';

$editor-container-height: 285px;

:host(:focus-visible) {
  outline: none;
}

.ids-editor {
  .hidden {
    display: none;
  }

  .audible {
    @include mixins.audible();
  }

  .editor-label {
    display: flex;
    align-items: baseline;
    margin-block-end: var(--ids-space-xs);

    &.required {
      &::after {
        content: '*';
        color: var(--ids-input-required-indicator-color-text-default);
        font-family: var(--ids-editor-font-family);
        font-size: var(--ids-font-size-md);
        margin-inline: var(--ids-space-3xs);
        margin-top: -10px;
        position: relative;
        top: 1px;
      }

      &.no-required-indicator::after,
      &:empty::after {
        content: '';
      }
    }
  }

  // Simulate standard label text size while empty with a non-breaking space
  &.label-state-hidden {
    .editor-label {
      margin-block-end: var(--ids-space-xs);

      &::before {
        content: '\00a0';
      }
    }
  }

  &.label-state-collapsed {
    .editor-label {
      margin-block-end: var(--ids-space-none);

      &.required::after {
        content: '';
      }
    }
  }

  .main-container {
    border-color: var(--ids-editor-color-border-default);
    border-radius: var(--ids-editor-border-radius-default);
    border-style: var(--ids-editor-border-style-default);
    border-width: var(--ids-editor-border-width-default);

    &:hover,
    &:active {
      border-color: var(--ids-editor-color-border-hover);
    }

    &.focused,
    &:focus-within {
      border-color: var(--ids-editor-color-border-focus);
      outline: var(--ids-editor-outline-focus);
      box-shadow: var(--ids-editor-shadow-border-focus);
    }

    &.error,
    &.error:hover:not(:focus-within),
    &.error:active:not(:focus-within) {
      border-color: var(--ids-editor-color-border-error);
      color: var(--ids-editor-color-text-error);

      &:focus-within {
        border-color: var(--ids-editor-color-border-error);
        box-shadow: var(--ids-editor-error-border-shadow);
      }
    }
  }

  .toolbar-container {
    border-top-left-radius: var(--ids-space-4xs);
    border-top-right-radius: var(--ids-space-4xs);
  }

  // Causes overflow to occur on Formatter Toolbar
  // (slotted for WebComponent, CSS class for CSS only)
  ::slotted(ids-toolbar),
  .ids-toolbar {
    max-width: 100%;
  }

  .editor-content {
    position: relative;
  }

  &[readonly] {
    .editor-label.required::after {
      content: '';
    }

    .toolbar-container {
      display: none;
    }

    .main-container {
      border-color: var(--ids-editor-color-border-readonly);
      color: var(--ids-editor-color-text-readonly);
    }

    .editor-container,
    .source-container {
      background-color: var(--ids-editor-color-background-readonly);

      a {
        pointer-events: none;
      }
    }

    .source-wrapper .line-numbers {
      background-color: var(--ids-editor-source-color-background-readonly);
    }
  }

  &[disabled] {
    .editor-label.required::after {
      color: var(--ids-input-required-indicator-color-text-disabled);
    }

    .toolbar-container {
      display: none;
    }

    .main-container,
    .main-container * {
      border-color: var(--ids-editor-color-border-disabled);
      color: var(--ids-editor-color-text-disabled) !important;
      cursor: var(--ids-editor-cursor-disabled);
      pointer-events: none;
      user-select: none;

      &:hover,
      &:active {
        color: var(--ids-editor-color-text-disabled);
      }

      &:focus,
      &:focus-within {
        border-color: var(--ids-editor-color-border-disabled);
        box-shadow: none;
      }
    }
  }

  .source-container,
  .editor-container {
    background-color: var(--ids-editor-background-color);
    font-family: var(--ids-editor-font-family);
    outline: var(--ids-editor-outline);
    line-height: var(--ids-editor-font-line-height);
    font-size: var(--ids-editor-font-size);
    overflow: auto;
  }

  .source-container {
    height: $editor-container-height + 32; // top/bottom padding;
  }

  .editor-container {
    height: $editor-container-height;

    a {
      color: var(--ids-editor-link-color-text-link);
      padding: var(--ids-editor-link-padding);

      &:hover,
      &:active {
        color: var(--ids-editor-link-color-text-hover);
      }

      &:focus {
        border-color: var(--ids-editor-link-color-border-focus);
        border-radius: var(--ids-editor-link-border-radius-focus);
        border-style: var(--ids-editor-link-border-style-focus);
        border-width: var(--ids-editor-link-border-width-focus);
        outline: var(--ids-editor-link-outline-focus);
        box-shadow: var(--ids-editor-shadow-focus);
      }
    }
  }

  .source-wrapper {
    display: flex;
    min-height: 100%;
    padding: var(--ids-editor-source-padding);
    margin: var(--ids-editor-source-margin);

    .line-numbers {
      background-color: var(--ids-editor-source-color-background-default);
      color: var(--ids-editor-source-line-color-text);
      font-family: var(--ids-editor-font-family);
      font-weight: var(--ids-editor-source-line-font-weight);
      margin: var(--ids-editor-source-line-margin);
      padding-block-start: var(--ids-editor-source-line-padding-block-start);
      padding-inline: var(--ids-editor-source-line-padding-inline);
      line-height: var(--ids-editor-source-font-line-height);
      list-style: none;
      text-align: end;
    }

    .source-textarea {
      background-color: var(--ids-editor-textarea-color-background);
      color: var(--ids-editor-source-color-text);
      border: var(--ids-editor-source-border);
      font-family: var(--ids-editor-font-family);
      font-size: var(--ids-editor-font-size);
      line-height: var(--ids-editor-source-textarea-font-line-height);
      padding-block-start: var(--ids-editor-source-padding-block-start);
      padding-inline: var(--ids-editor-source-padding-inline);
      outline: var(--ids-editor-source-textarea-outline);
      overflow: hidden;
      resize: none;
      height: 100%;
      width: 100%;
    }
  }
}

::slotted(div.editor-container) {
  padding: var(--ids-editor-padding);
  box-sizing: border-box;
  min-height: 100%;
  outline: none;
}

::slotted(div.editor-container:empty) {
  &::before {
    content: attr(placeholder);
    color: var(--ids-editor-color-text-placeholder);
    display: inline-block;
  }

  &:focus::before {
    content: '';
  }
}
